
<%- include("./partials/header") %>
<body>
    <%- include('./partials/leftbar') %>
    <!-- Main Content Wrapper -->
    <div class=" ml-[16.6%]">
    <!-- Search Bar -->

        <div id="searchButton" class=" bg-slate-400 font-bold py-2 px-4 flex items-center gap-5">
            <div class=" flex items-center bg-black gap-3 pr-3 rounded-lg">
                <input type="text" id="searchInput" placeholder="Search..." class="py-2 px-4 outline-none focus:ring-0" />
                <button id="searchButton" type="submit">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
                </button>
            </div>
        </div>

    <div id="resultsContainer" class="grid lg:grid-cols-4 md:grid-cols-2 sm:grid-cols-1 gap-4 m-10">
         <!-- Search results will be dynamically injected here -->
      <% blogs.forEach(blog => { %>
        <div
          class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700"
          data-blog-id="<%= blog._id %>"
          data-cover-url="<%= blog.coverImageURL %>"
          data-title="<%= blog.title %>"
          data-created-by-id="<%= blog.createdBy._id %>"
          data-created-by-firstname="<%= blog.createdBy.firstName %>"
          data-created-by-lastname="<%= blog.createdBy.lastName %>"
          data-created-at="<%= new Date(blog.createdAt).toISOString() %>"
        >
          <a href="/blog/<%= blog._id %>">
            <% if (blog.coverImageURL) { %>
            <img
              class="rounded-t-lg w-full h-64 object-cover"
              src="<%= blog.coverImageURL %>"
              alt="Cover Image"
            />
            <% } %>
          </a>
          <div class="p-5">
              <h5
                class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"
              >
                <%= blog.title %>
              </h5>
              <a
              href="/blog/<%= blog._id %>"
              class="items-center py-2 font-medium text-sm text-gray-500"
            >
              <%= blog.subTitle.split(" ").slice(0, 30).join(" ") %>
              <% if (blog.subTitle.split("").length > 30) { %>
                ... <span class="text-blue-500">Read more</span>
              <% } %>
            </a>
          <div
          class="flex justify-between items-center p-4 text-sm font-bold text-gray-600"
          >
              <button
                id="like-btn"
                class="flex cursor-default items-center"
              >
                <img
                  src="/images/like.png"
                  alt="like"
                  class="w-5 h-5 filter grayscale"
                />
                <span id="like-count" class="ml-2 text-sm"><%= blog.likeCount %></span>
              </button>
              <div class="flex flex-col items-end">
                <p>
                  Created by: <%= blog.createdBy.firstName %> <%=
                  blog.createdBy.lastName %>
                </p>
                <p>Posted on: <%= new Date(blog.createdAt).toDateString() %></p>
              </div>
            </div>
          </div>
        </div>
        <% }) %>
    </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const searchInput = document.getElementById('searchInput');
            const resultsContainer = document.getElementById('resultsContainer');
            const user = <%- JSON.stringify(user) || 'null' %>; // Ensure user is available
            const initialBlogs = <%- JSON.stringify(blogs) || '[]' %>; // Ensure blogs is available

            function displayResults(blogs) {
                resultsContainer.innerHTML = blogs.map(blog => `
                    <div class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
                        <a href="/blog/${blog._id}">
                            ${blog.coverImageURL ? `<img class="rounded-t-lg w-full h-64 object-cover" src="${blog.coverImageURL}" alt="Cover Image" />` : ''}
                        </a>
                        <div class="p-5">
                            <a href="/blog/${blog._id}">
                                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">${blog.title}</h5>
                            </a>
                            <a href="/blog/${blog._id}" class="text-gray-700 dark:text-gray-400 mb-2 text-sm">${blog.subTitle.split(" ").slice(0, 30).join(" ")}${blog.subTitle.split(" ").length > 30 ? '... <span class="text-blue-500">Read more</span>' : ''}</a>
                            
                            <!-- Tag Section -->
                            <div class="flex flex-wrap gap-2 mb-4">
                                ${blog.tags.map(tag => `<span class="bg-gray-200 text-gray-700 px-2 py-1 rounded-lg text-xs">#${tag}</span>`).join('')}
                            </div>
                            
                            <!-- Action Buttons -->
                            <div class="flex justify-between items-center p-4">
                                <!-- Like Button -->
                                <button class="like-btn flex items-center" data-blog-id="${blog._id}">
                                    <img src="/images/${blog.isLiked ? 'liked.png' : 'like.png'}" alt="like" class="w-5 h-5 filter ${blog.isLiked ? '' : 'grayscale'}" />
                                    <span class="ml-2 text-sm">${blog.likeCount}</span>
                                </button>
                                <!-- Author and Date -->
                                <div class="flex flex-col items-end text-sm font-bold text-gray-600">
                                    <p>Created by: ${blog.createdBy.firstName} ${blog.createdBy.lastName}</p>
                                    <p>Posted on: ${new Date(blog.createdAt).toDateString()}</p>
                                </div>
                                
                            </div>
                            
                        </div>
                    </div>
                `).join('');
            }


            async function fetchAndDisplayResults(query) {
                try {
                    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
                    const blogs = await response.json();
                    displayResults(blogs);
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            }

            // Initialize search on page load
            const urlParams = new URLSearchParams(window.location.search);

            const query = urlParams.get('q') || '';
            searchInput.value = query;
            if (query.length > 0) {
                await fetchAndDisplayResults(query);
            } else {
                displayResults(initialBlogs);
            }

            // Search input event listener
            searchInput.addEventListener('input', () => {
                const query = searchInput.value;
                const url = new URL(window.location);
                
                url.searchParams.set('q', query);

                history.pushState({ query }, '', url);

                if (query.length > 0) {
                    fetchAndDisplayResults(query);
                } else {
                    displayResults(initialBlogs);
                }
            });

            // Search button event listener
            const searchButton = document.getElementById('searchButton');
            searchButton.addEventListener('click', async () => {
                const query = searchInput.value;
                if (query.length > 0) {
                    await fetchAndDisplayResults(query);
                }
            });

            // Handle browser navigation
            window.addEventListener('popstate', async (event) => {
                const query = new URL(window.location).searchParams.get('q') || '';
                if (query.length > 0) {
                    await fetchAndDisplayResults(query);
                } else {
                    displayResults(initialBlogs);
                }
            });
        });
    </script>
</body>
</html>
