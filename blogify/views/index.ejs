<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!-- Include your stylesheets here -->
</head>
<body>
    <%- include("./partials/header") %>
    <%- include("./partials/navbar") %>
    <!-- Search Bar -->
    <div class="flex items-center gap-4">
        <input type="text" id="searchInput" placeholder="Search..." class="py-2 px-4 border rounded-lg" />
    </div>
    <div id="resultsContainer" class="grid lg:grid-cols-4 md:grid-cols-2 sm:grid-cols-1 gap-4 mx-40 my-10">
        <!-- Search results will be dynamically injected here -->
        <% blogs.forEach(blog => { %>
            <div class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700" data-blog-id="<%= blog._id %>" data-cover-url="<%= blog.coverImageURL %>" data-title="<%= blog.title %>" data-created-by-id="<%= blog.createdBy._id %>" data-created-by-firstname="<%= blog.createdBy.firstName %>" data-created-by-lastname="<%= blog.createdBy.lastName %>" data-created-at="<%= new Date(blog.createdAt).toISOString() %>">
                <a href="/blog/<%= blog._id %>">
                    <% if (blog.coverImageURL) { %>
                        <img class="rounded-t-lg w-full" src="<%= blog.coverImageURL %>" alt="Cover Image" />
                    <% } %>
                </a>
                <div class="p-5">
                    <a href="/blog/<%= blog._id %>">
                        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"><%= blog.title %></h5>
                    </a>
                    <a href="/blog/<%= blog._id %>" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        Read more
                        <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                        </svg>
                    </a>
                    <% if (user && user._id == blog.createdBy._id) { %>
                        <a href="/blog/edit/<%= blog._id %>" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-300 rounded-lg hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                            Edit
                        </a>
                    <% } %>
                    <p>Created by: <%= blog.createdBy.firstName %> <%= blog.createdBy.lastName %></p>
                    <p>Posted on: <%= new Date(blog.createdAt).toDateString() %></p>
                </div>
            </div>
        <% }) %>
    </div>
    <%- include("./partials/footer") %>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const searchInput = document.getElementById('searchInput');
            const resultsContainer = document.getElementById('resultsContainer');
            const user = <%- JSON.stringify(user) || 'null' %>; // Ensure user is available
            const initialBlogs = <%- JSON.stringify(blogs) || '[]' %>; // Ensure blogs is available

            function displayResults(blogs) {
                resultsContainer.innerHTML = blogs.map(blog => `
                    <div class="max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
                        <a href="/blog/${blog._id}">
                            ${blog.coverImageURL ? `<img class="rounded-t-lg w-full" src="${blog.coverImageURL}" alt="Cover Image" />` : ''}
                        </a>
                        <div class="p-5">
                            <a href="/blog/${blog._id}">
                                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">${blog.title}</h5>
                            </a>
                            <a href="/blog/${blog._id}" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                Read more
                                <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                                </svg>
                            </a>
                            ${user && user._id === blog.createdBy._id ? `
                                <a href="/blog/edit/${blog._id}" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-300 rounded-lg hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                    Edit
                                </a>
                            ` : ''}
                            <p>Created by: ${blog.createdBy.firstName} ${blog.createdBy.lastName}</p>
                            <p>Posted on: ${new Date(blog.createdAt).toDateString()}</p>
                        </div>
                    </div>
                `).join('');
            }

            async function fetchAndDisplayResults(query) {
                try {
                    const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
                    const blogs = await response.json();
                    displayResults(blogs);
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            }

            // Initialize search on page load
            const urlParams = new URLSearchParams(window.location.search);

            const query = urlParams.get('q') || '';
            searchInput.value = query;
            if (query.length > 0) {
                await fetchAndDisplayResults(query);
            } else {
                displayResults(initialBlogs);
            }

            // Search input event listener
            searchInput.addEventListener('input', () => {
                const query = searchInput.value;
                const url = new URL(window.location);
                console.log(url);
                
                url.searchParams.set('q', query);

                history.pushState({ query }, '', url);

                if (query.length > 0) {
                    fetchAndDisplayResults(query);
                } else {
                    displayResults(initialBlogs);
                }
            });

            // Handle browser navigation
            window.addEventListener('popstate', async (event) => {
                const query = new URL(window.location).searchParams.get('q') || '';
                if (query.length > 0) {
                    await fetchAndDisplayResults(query);
                } else {
                    displayResults(initialBlogs);
                }
            });
        });
    </script>
</body>
</html>
