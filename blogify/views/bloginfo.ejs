<%- include('./partials/header') %>

<body>
    <%- include('./partials/navbar') %>


    <!-- Main Content Wrapper -->
    <div class="flex-1 ml-[16.6%] flex flex-row">
        <!-- Center Content -->
        <div class="w-2/3 p-5">
            <div class="flex flex-col gap-5 p-5">
                <div>
                    <h1 class="text-4xl font-bold tracking-tight text-gray-900 dark:text-white mb-4"><%= blog.title %></h1>
                    <hr class="border-t-2 border-gray-300 dark:border-gray-600 my-4">
                </div>
                <div id="editor-container"><%- blog.body %></div>
                <div class="flex flex-col items-end">
                    <div class="flex items-center">
                        <img class="w-8 h-8 object-cover rounded-full" src="<%= blog?.createdBy.profileImageUrl %>" alt="Profile Image" />
                        <p class="text-sm text-gray-500 dark:text-gray-400">Written by: <%= blog?.createdBy.firstName %> <%= blog.createdBy.lastName %></p>
                    </div>
                    <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">Posted on: <%= new Date(blog.createdAt).toDateString() %></p>
                </div>
            </div>
            
            <div class="container mx-auto mb-8 shadow p-5">
                <form class="grid grid-cols-10 mt-4">
                    <input name="comment" type="text" id="comment" class="col-span-8 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg rounded-r-none focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Add a comment" required />
                    <button type="submit" class="col-span-2 w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-l-none rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
                </form>
                <div class="mt-6 comments-container">
                    <h1 class="text-xl font-semibold">(<span><%= comments.length %></span>) Comments</h1>
                    <% comments.forEach(comment => { %>
                        
                        <div class="p-5 mt-4 <%= comment.isSpam ? 'bg-red-100' : 'bg-gray-50' %> dark:<%= comment.isSpam ? 'bg-red-900' : 'bg-gray-700' %> rounded-lg shadow relative" id="comment-<%= comment._id %>">
                            <div class="flex items-center">
                                <img class="w-6 h-6 object-cover rounded-full" src="<%= comment.createdBy.profileImageUrl %>" alt="Profile Image" />
                                <p class="text-sm text-gray-500 dark:text-gray-400 ml-2"><%= comment.createdBy.email %></p>
                                <% if (user && user._id.toString() === comment.createdBy._id.toString()) { %>
                                <!-- Three-dot menu -->
                                <div class=" flex relative ml-auto">
                                    <a href="#" class="px-4 py-2 underline text-sm text-gray-500 hover:text-gray-800" data-action="<%= comment.isSpam ? 'unspam' : 'spam'%>" data-comment-id="<%= comment._id %>"><%= comment.isSpam ? 'Unmark as Spam' : 'Mark as Spam' %></a>
                                    <a href="#" class="px-4 py-2 text-sm text-red-500 hover:text-red-700" data-action="delete" data-comment-id="<%= comment._id %>">Delete</a>  
                                </div>
                                <% } %>
                            </div>
                            <p class="mt-2 text-gray-900 dark:text-white"><%= comment.comment %></p>

                        </div>
                    <% }) %>
                </div>
            </div>
        </div>
        <!-- Right Sidebar -->
        <div class="w-1/3 p-6 bg-gray-200 mt-16">
            <h2 class="text-lg font-semibold">Right Sidebar</h2>
            <p class="mt-4">Additional content or widgets</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. In vitae ex est qui? Incidunt magnam et deleniti illo. Sint commodi dignissimos, rem quia doloremque magnam veniam praesentium sunt, ullam molestiae sapiente accusamus! Qui distinctio natus quaerat, quam odit ipsum voluptatum perspiciatis reprehenderit. Quia excepturi non earum pariatur placeat consequatur reprehenderit. Corrupti illo in esse qui minus, officiis voluptates explicabo eaque laudantium inventore vel numquam pariatur quae recusandae quia ratione omnis earum nihil laboriosam repellendus magnam molestias magni id expedita? Repellat praesentium omnis, aliquid et eius minima nesciunt? Dicta similique explicabo quis asperiores nostrum. Corporis voluptate reprehenderit, ea labore ipsam vel eaque, voluptates rem et consequuntur doloribus iure ducimus! Ex sapiente vitae earum qui perferendis veniam, quia saepe aliquam, cum magnam ipsa soluta dolorum illum! Voluptatem deserunt nemo iste. Iusto autem assumenda est id, aliquid laboriosam, itaque labore iste officia dignissimos minima, explicabo sit illo neque recusandae iure facere nulla obcaecati ipsum sint rem quas consequuntur. Velit nulla temporibus, consectetur sed non cumque officiis voluptatibus vitae aliquam deleniti dolore deserunt laborum architecto nisi quam magni, iusto omnis. Ipsa quibusdam qui quaerat est quam iure ipsum eveniet. Odit vero veritatis obcaecati incidunt laborum impedit omnis, molestias reprehenderit dolorem officia laudantium eius temporibus. Tempora earum quae nesciunt sint atque quam ullam eos ex laborum ipsa ad aut officiis eum quibusdam, aspernatur officia exercitationem sequi! Numquam id dolorum debitis expedita, saepe, earum, eveniet quisquam voluptatum necessitatibus architecto laboriosam provident! Animi eum labore laboriosam minus magni, iste reiciendis! Doloremque enim laudantium facilis, nam quas totam dolores mollitia ut saepe maiores nemo assumenda facere perferendis error. Adipisci deserunt minima architecto cum eligendi culpa saepe accusantium quia id nostrum vero repellendus dolores, tempora voluptatibus eaque. Temporibus doloremque, fuga ea, iusto voluptatem hic sapiente ex fugiat veniam quidem voluptatum! Sapiente delectus, incidunt voluptates necessitatibus minima maiores ex obcaecati, nulla repellat earum commodi, cupiditate ullam iusto veritatis accusamus odit aspernatur asperiores error vel vitae blanditiis. Velit neque laboriosam minus sunt voluptatum, sed eius! Quasi itaque voluptas culpa voluptatibus aperiam. Reiciendis, quas eius cupiditate ratione accusamus aperiam veniam ducimus sapiente officia illum similique, dolorem quis quod, assumenda iure id! Eligendi odit molestiae sapiente debitis, rerum soluta illum reprehenderit unde in reiciendis. Est earum ipsa fugit aperiam quis officia doloremque, quia voluptatem fugiat delectus maiores numquam ex magni accusantium ab, deleniti voluptas pariatur nihil voluptatum cupiditate. Unde, soluta a. Aliquid sit, eaque autem at quo, incidunt laudantium fugit ratione excepturi in voluptatibus numquam magnam optio quod. Incidunt veniam aperiam accusantium molestiae ducimus sit explicabo harum, at dolor impedit obcaecati, porro voluptate. Illum unde reiciendis, provident blanditiis eos, corporis aut deleniti quaerat nisi natus saepe quibusdam iste alias vitae, voluptate possimus nihil pariatur ipsam quasi cum rerum sed. Recusandae ullam cupiditate ipsam illum nemo, perferendis tempora necessitatibus, nesciunt, iure autem at omnis molestias? Nulla laboriosam sunt exercitationem omnis minima debitis voluptate qui nihil corrupti voluptates aspernatur, nostrum commodi eos enim voluptatibus, quis incidunt obcaecati mollitia sint totam veritatis explicabo quidem nesciunt. Ex animi, autem voluptas modi maxime fugiat reprehenderit culpa, quo sequi nemo voluptatem earum excepturi sint quia quod laborum mollitia aliquid qui illo cum ducimus expedita laboriosam officia! Neque veniam quam nihil consectetur quibusdam, adipisci nesciunt. Voluptate nemo nisi suscipit, minima alias tempore sequi ratione eius sed maxime a vero labore excepturi repellendus fuga facilis vitae molestiae. Deleniti soluta autem cum aperiam laborum excepturi enim minima aspernatur nihil doloremque natus, saepe sunt tenetur laudantium culpa aliquam tempora deserunt nesciunt consequatur? Numquam aliquam architecto blanditiis mollitia magnam consequuntur quibusdam animi deserunt id, delectus veniam, totam dolor sint consequatur fugiat vel ducimus tenetur ad commodi tempora repellat voluptas odit. Voluptate adipisci dignissimos nisi odio! Ab quia exercitationem adipisci perspiciatis aperiam odio possimus non earum. Nihil magni error reiciendis aliquam quibusdam quaerat, odit impedit quae sapiente enim tempore adipisci dolorum vitae, animi qui. Totam delectus tempora placeat harum, ea deleniti quo non consequuntur eveniet nesciunt maxime at vel? Incidunt distinctio ex eligendi ullam saepe ad hic ipsa quod excepturi modi aliquam temporibus dicta at vel magnam itaque, harum voluptatem tempora. Mollitia sunt, nisi neque ex quo, obcaecati pariatur ab enim in fugiat architecto placeat illo culpa unde doloremque nam at, nesciunt corrupti ipsa officia commodi. Mollitia consectetur voluptatibus eveniet saepe ut velit odit tenetur in omnis. Rerum perferendis porro maiores voluptas voluptatem, aliquid commodi, laborum quo assumenda, pariatur delectus consectetur earum aspernatur voluptate veniam explicabo odit aperiam eaque quasi dignissimos? Adipisci sequi tempore sed laboriosam architecto aperiam voluptatem tenetur alias hic perferendis iste molestias quas distinctio, quo necessitatibus enim ad a autem dolorem vitae numquam dolorum accusantium. Officia aspernatur voluptate non possimus. Consequuntur rerum natus quia similique! Itaque debitis ex quidem voluptatem nulla quisquam pariatur illo. Perspiciatis iure tempora, sequi iusto vel saepe nulla eum accusantium placeat tenetur nostrum in. Eius magni voluptas commodi nemo quod consequuntur ex a voluptatum, tempore libero esse? Temporibus, harum blanditiis quae explicabo illo ducimus reiciendis nemo placeat, corrupti aliquam minus et cupiditate. Voluptates obcaecati sint minima voluptas ad placeat deserunt dicta alias odio asperiores velit magni quibusdam quidem quos, corporis nemo amet excepturi cum! Dolores et, dolor ea aperiam vitae recusandae voluptatibus fuga officia dolorum voluptas explicabo possimus nisi? Illum a ad totam culpa? Voluptas ullam dolor id, delectus tenetur dolorem repellat veritatis, accusantium sed consectetur fuga hic, illum molestias excepturi iusto impedit eligendi ut et. Cupiditate eveniet nobis laboriosam a ipsam reprehenderit pariatur ullam porro! Nobis impedit dicta hic quaerat temporibus deserunt vel sed minus praesentium consequuntur earum atque aut, sint sequi tempore quia tenetur corrupti alias porro? Saepe consequatur similique iste quas, aspernatur necessitatibus odio. Suscipit inventore quod asperiores voluptates consequatur voluptate eius cupiditate deleniti expedita labore qui dignissimos laboriosam, natus provident nihil harum veritatis fugit distinctio, tenetur fuga nesciunt, reprehenderit a. Blanditiis nemo laborum minima facilis nihil. Aliquam harum, itaque magnam quos cumque quidem accusantium molestias doloremque ab? Quas impedit earum assumenda. Quibusdam, illum modi dicta fugiat consequatur ipsam optio sunt dolor dignissimos, harum a, vero adipisci expedita fugit ipsa minus exercitationem quo vel natus nostrum? Vitae blanditiis, quaerat voluptatibus aliquid illo mollitia quisquam porro!</p>
        </div>
    </div>



    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {

        const socket = io();

        // Listen for new comments from the server
        socket.on('commentAdded', (comment) => {
            const commentsContainer = document.querySelector('.comments-container');
            const newComment = `
                <div class="p-5 mt-4 ${comment.isSpam ? 'bg-red-100 dark:bg-red-900' : 'bg-gray-50 dark:bg-gray-700'} rounded-lg shadow relative" id="comment-${comment._id}">
                    <div class="flex items-center">
                        <img class="w-6 h-6 object-cover rounded-full" src="${comment.createdBy.profileImageUrl}" alt="Profile Image" />
                        <p class="text-sm text-gray-500 dark:text-gray-400 ml-2">${comment.createdBy.email}</p>
                        ${comment.createdBy._id.toString() === '<%= user?._id %>' ? `
                        <div class="relative ml-auto flex">
                            <a href="#" class="px-4 py-2 underline text-sm text-gray-500 hover:text-gray-800" data-action="${comment.isSpam ? 'unspam' : 'spam'}" data-comment-id="${comment._id}">${comment.isSpam ? 'Unmark as Spam' : 'Mark as Spam'}</a>
                            <a href="#" class="px-4 py-2 text-sm text-red-500 hover:text-red-700" data-action="delete" data-comment-id="${comment._id}">Delete</a>
                        </div>
                        ` : ''}
                    </div>
                    <p class="mt-2 text-gray-900 dark:text-white">${comment.comment}</p>
                </div>
            `;
            commentsContainer.innerHTML += newComment;

            const commentsCount = document.querySelector('.comments-container span');
            commentsCount.innerHTML = parseInt(commentsCount.innerHTML) + 1;
        });

        // Handle form submission for new comments
        document.querySelector('form').addEventListener('submit', function(e) {
            e.preventDefault();
            const commentInput = document.getElementById('comment');
            const comment = commentInput.value;
            const blogID = '<%= blog._id %>';
            const createdBy = '<%= user?._id %>';
            if (!createdBy) {
                window.location.href = '/login'; 
                return;
            }
            socket.emit('newComment', { comment, blogID, createdBy });
            commentInput.value = '';
        });

        // Event delegation for comment actions (delete, spam, unspam)
        document.querySelector('.comments-container').addEventListener('click', function(e) {
            if (e.target.matches('[data-action]')) {
                e.preventDefault();
                const action = e.target.getAttribute('data-action');
                const commentID = e.target.getAttribute('data-comment-id');

                if (action === 'delete') {
                    if (confirm('Are you sure you want to delete this comment?')) {
                        socket.emit('deleteComment', commentID);
                    }
                } else if (action === 'spam') {
                    if (confirm('Are you sure you want to mark this comment as spam?')) {
                        socket.emit('markToSpam', commentID);
                    }
                } else if (action === 'unspam') {
                    if (confirm('Are you sure you want to unmark this comment as spam?')) {
                        socket.emit('unmarkToSpam', commentID);
                    }
                }
            }
        });

        // Listen for comment deletion from the server
        socket.on('commentDeleted', (commentID) => {
            const commentElement = document.getElementById(`comment-${commentID}`);
            if (commentElement) {
                commentElement.remove();
                const commentsCount = document.querySelector('.comments-container span');
                commentsCount.innerHTML = parseInt(commentsCount.innerHTML) - 1;
            }
        });

        socket.on('commentMarkedAsSpam', (commentID) => {
            toggleSpamState(commentID, true);
        });

        socket.on('commentUnmarkedAsSpam', (commentID) => {
            toggleSpamState(commentID, false);
        });

        function toggleSpamState(commentID, isSpam) {
            const commentElement = document.getElementById(`comment-${commentID}`);
            if (commentElement) {
                const actionButton = commentElement.querySelector('[data-action]');
                if (isSpam) {
                    actionButton.setAttribute('data-action', 'unspam');
                    actionButton.innerHTML = 'Unmark as Spam';
                    commentElement.classList.add('bg-red-100', 'dark:bg-red-900');
                    commentElement.classList.remove('bg-gray-50', 'dark:bg-gray-700');
                } else {
                    actionButton.setAttribute('data-action', 'spam');
                    actionButton.innerHTML = 'Mark as Spam';
                    commentElement.classList.remove('bg-red-100', 'dark:bg-red-900');
                    commentElement.classList.add('bg-gray-50', 'dark:bg-gray-700');
                }
            }
        }

        });

    </script>
    <style>
        pre {
            background-color: hsl(210, 8%, 95%);
            border: 1px solid #E5E5E5;
            padding: 8px;
            margin: 2px 0px;
            border-radius: 6px;
        }
        blockquote {
            border-left: 5px solid #d6b2b2;
            padding: 5px 20px;
            margin: 0px 20px;
            font-weight: bold;
        }
    </style>
</body>
</html>
